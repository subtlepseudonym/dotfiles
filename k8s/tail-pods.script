#!/usr/bin/env -S zsh

levels=('error') # default error
zparseopts -D -E -- \
	-compact-output=compact_output \
	h=help \
	-help=help \
	-namespace:=namespace \
	-context:=context \
	-since:=since \
	-level+:=levels

# prune flag names
levels=("${levels[@]:#--level}")

if [[ "${help}" != "" ]]; then
	echo \
'Tail multiple pods and parse their output for errors

Usage:
    usage: tail-pods [flags] <pod-regex>

Flags:
        --compact-output        Print JSON output on a single line
        --context CONTEXT       Use kubectl context CONTEXT
    -h, --help                  Display this help text
        --level LEVEL           Display logs with LEVEL log level. To specify multiple log levels, repeat this option
        --namespace NAMESPACE   Use kubectl namespace NAMESPACE
        --since DURATION        Only display logs newer than DURATION ago
'
	exit 0
fi

if [[ $# < 1 ]]; then
	echo 'usage: tail-pods [flags] <pod-regex>'
	exit 1
fi

which stern &>> /dev/null
[[ $? != 0 ]] && echo "Please install stern"

which jq &>> /dev/null
[[ $? != 0 ]] && echo "Please install jq"

stern \
	--output json \
	${namespace} \
	${context} \
	${since} \
	"$1" |
jq \
	${compact_output} \
	--arg levels "${levels[@]}" \
	'.message = (.message | fromjson) |
	select(.message.level as $level | $levels | contains($level)) |
	{
		containerName,
		podName,
		"ts": (.message.ts | strflocaltime("%FT%T%z")),
		"error": .message.error,
	}'
